variable "name" {
  type        = string
  default     = "{{data["name"]}}"
  description = "Name to be assigned to all child resources. A suffix may be added internally when required. Use default value unless you need to install multiple instances"
}

variable "tags" {
  type        = map(string)
  description = "Default tag for resource"
  default = {
    "product" = "{{data["name"]}}"
  }
}

locals{
  CCS_member_account_id="{{data["deployment_member_account"]}}"
}


provider "aws" {
  alias  = "member"
  region = "{{data["region"]}}"
  assume_role {
    # 'OrganizationAccountAccessRole' is the default role created by AWS for managed-account users to be able to admin member accounts.
    # <br/>https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html
    role_arn = "arn:aws:iam::${local.CCS_member_account_id}:role/OrganizationAccountAccessRole"
  }
}

module "cloud-scanner_example_organizational-deploy-with-member-account-read-only-access-creation" {
  providers = {
    aws.member = aws.member
  }
  source                        = "deepfence/cloud-scanner/aws//examples/organizational-deploy-with-member-account-read-only-access-creation"
  version                       = "0.3.0"
  CCS_member_account_id         = "${local.CCS_member_account_id}"
  name                          = var.name
  tags                          = var.tags
  mgmt-console-url              = "{{data["management_console_url"]}}"
  mgmt-console-port             = "443"
  deepfence-key                 = "{{data["deepfence_key"]}}"
  image                         = "quay.io/deepfenceio/cloud-scanner:latest"
  multiple-acc-ids              = "{{data["selected_member_accounts"]}}"
}