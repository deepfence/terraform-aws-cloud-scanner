{% for item in data_A %}
provider "aws" {
  alias = "{{item["alias"]}}"
  region = "{{item["region"]}}"
  assume_role {
    role_arn = "arn:aws:iam::{{item["member_account_id"]}}:role/OrganizationAccountAccessRole"
  }
}
{% endfor %}

{% for item in data_A %}

data "aws_iam_policy" "managed_policy_{{item["alias"]}}" {
  provider = aws.{{item["alias"]}}
  arn      = "arn:aws:iam::aws:policy/ReadOnlyAccess" 
}

resource "aws_iam_role" "read_only_role_{{item["alias"]}}" {
  provider           = aws.{{item["alias"]}}
  name               = "${var.name}-mem-acc-read-only-access"
  assume_role_policy = data.aws_iam_policy_document.assume_policy_{{item["alias"]}}.json
  tags               = var.tags
}

data "aws_iam_policy_document" "assume_policy_{{item["alias"]}}" {
  provider           = aws.{{item["alias"]}}
  statement {
    effect = "Allow"
    principals {
      type = "AWS"
      identifiers = [
        "arn:aws:iam::{{item["ccs_mem_account_id"]}}:role/${var.name}-organizational-ECSTaskRole"
      ]
    }
    actions = ["sts:AssumeRole"]
  }
}

# policy attachment

resource "aws_iam_role_policy_attachment" "policy_attachment_{{item["alias"]}}" {
  provider   = aws.{{item["alias"]}}
  role       = aws_iam_role.read_only_role_{{item["alias"]}}.id
  policy_arn = data.aws_iam_policy.managed_policy_{{item["alias"]}}.arn 
}

{% endfor %}





