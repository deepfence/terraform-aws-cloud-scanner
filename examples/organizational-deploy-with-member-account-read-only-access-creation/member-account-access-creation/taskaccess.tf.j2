{% for item in data_B %}

provider "aws" {
  alias = "{{item["alias"]}}"
  region = "{{item["region"]}}"
  assume_role {
    role_arn = "arn:aws:iam::{{item["ccs_mem_account_id"]}}:role/OrganizationAccountAccessRole"
  }
}

resource "aws_iam_role" "ccs_ecs_task_role" {
  provider           = aws.{{item["alias"]}}
  name               = "${var.name}-organizational-ECSTaskRole"
  assume_role_policy = data.aws_iam_policy_document.task_assume_role.json
  path               = "/"
  tags               = var.tags
}

data "aws_iam_policy_document" "task_assume_role" {
  provider = aws.{{item["alias"]}}
  statement {
    effect = "Allow"
    principals {
      identifiers = ["ecs-tasks.amazonaws.com"]
      type        = "Service"
    }
    actions = ["sts:AssumeRole"]
  }
}
     
data "aws_iam_policy_document" "mem_acc_assume_role" {
  provider = aws.{{item["alias"]}}
  statement {
    effect = "Allow"
    actions = [
      "sts:AssumeRole",
    ]
    resources = [
      "arn:aws:iam::*:role/${var.role_in_all_account_to_be_scanned}"
    ]
  }
}

resource "aws_iam_role_policy" "mem_acc_assume_role" {
  provider = aws.{{item["alias"]}}
  name     = "${var.name}-AllowAssumeRoleInChildAccounts"
  role     = aws_iam_role.ccs_ecs_task_role.id
  policy   = data.aws_iam_policy_document.mem_acc_assume_role.json
}

{% endfor %}